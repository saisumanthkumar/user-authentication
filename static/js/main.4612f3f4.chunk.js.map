{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["getStorage","list","localStorage","getItem","JSON","parse","App","useState","username","setusername","password","setpassword","data","setdata","show","msg","color","message","setmessage","useEffect","setItem","stringify","className","style","backgroundColor","type","onChange","e","target","value","placeholder","onClick","filtered","filter","item","Object","keys","length","id","Date","getTime","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAGMA,EAAa,WACjB,IAAMC,EAAOC,aAAaC,QAAQ,QAClC,OAAGF,EACMG,KAAKC,MAAMJ,GAGX,IA8DIK,MA1Df,WAEE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBJ,mBAASP,GAAjC,mBAAOY,EAAP,KAAaC,EAAb,KACA,EAA8BN,mBAAS,CAACO,MAAK,EAAMC,IAAI,GAAGC,MAAM,KAAhE,mBAAOC,EAAP,KAAgBC,EAAhB,KAoCA,OAHAC,qBAAU,WACRjB,aAAakB,QAAQ,OAAOhB,KAAKiB,UAAUT,MAC1C,CAACA,IAEF,gCACE,qBAAKU,UAAU,OACf,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qDACCL,EAAQH,MAAQ,mBAAGS,MAAO,CAACC,gBAAkBP,EAAQD,OAASM,UAAU,QAAxD,SAAiEL,EAAQF,MAC1F,uBAAOU,KAAK,OAAOC,SAAU,SAACC,GAAOlB,EAAYkB,EAAEC,OAAOC,QAASC,YAAY,WAAWD,MAAOrB,IACjG,uBAAOiB,KAAK,WAAWC,SAAU,SAACC,GAAOhB,EAAYgB,EAAEC,OAAOC,QAASC,YAAY,WAAWD,MAAOnB,IACrG,wBAAQY,UAAU,QAAQS,QAxBrB,WACX,IAAMC,EAAWpB,EAAKqB,QAAO,SAACC,GAAD,OAAUA,EAAK1B,WAAaA,GAAY0B,EAAKxB,WAAaA,KACvE,KAAbF,GAAgC,KAAbE,IACgB,IAAjCyB,OAAOC,KAAKJ,GAAUK,OACvBnB,EAAW,CAACJ,MAAK,EAAKC,IAAI,4BAA4BC,MAAM,UAG5DE,EAAW,CAACJ,MAAK,EAAKC,IAAI,iBAAiBC,MAAM,UAiB/C,oBACA,wBAAQM,UAAU,SAASS,QA3CrB,WACZ,GAAgB,KAAbvB,GAAgC,KAAbE,EAAgB,CACpC,IACMwB,EAAO,CACXI,IAFS,IAAIC,MAAOC,UAAUC,WAG9BjC,SAAUA,EACVE,SAAUA,GAGZG,EAAQ,GAAD,mBAAKD,GAAL,CAAUsB,KACjBhB,EAAW,CAACJ,MAAK,EAAKC,IAAI,oCAAoCC,MAAM,UACpEP,EAAY,IACZE,EAAY,MA+BR,8BCpDK+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4612f3f4.chunk.js","sourcesContent":["import { useState,useEffect } from 'react';\nimport './App.css';\n\nconst getStorage = () =>{\n  const list = localStorage.getItem('list');\n  if(list){\n    return JSON.parse(list)\n  }\n  else{\n    return []\n  }\n}\n\nfunction App() {\n\n  const [username, setusername] = useState('')\n  const [password, setpassword] = useState('')\n  const [data, setdata] = useState(getStorage)\n  const [message, setmessage] = useState({show:false,msg:'',color:''})\n\n  // signup \n  const signUp =() => {\n    if(username !== '' && password !== ''){\n      const id = new Date().getTime().toString();\n      const item = {\n        id: id,\n        username: username,\n        password: password\n      }\n\n      setdata([...data,item])\n      setmessage({show:true,msg:'successfully Created your account',color:'green'})\n      setusername('')\n      setpassword('')\n      \n    }\n  }\n\n  // LogIn\n  const logIn =()=> {\n    const filtered = data.filter((item) => item.username === username && item.password === password)\n    if(username !== '' && password !== ''){\n      if(Object.keys(filtered).length !== 0){\n        setmessage({show:true,msg:'Logged In to your account',color:'green'})\n      }\n      else{\n        setmessage({show:true,msg:'No data found.',color:'red'})\n      }\n    }\n  }\n\n  useEffect(() => {\n    localStorage.setItem('list',JSON.stringify(data))\n  }, [data])\n  return (\n    <div>\n      <div className=\"bg\"></div>\n      <div className=\"App\">\n        <div className=\"container\">\n          <h1>User-Authentication</h1>\n          {message.show && <p style={{backgroundColor : message.color }} className=\"alert\">{message.msg}</p> }\n          <input type=\"text\" onChange={(e) => {setusername(e.target.value)}} placeholder=\"Username\" value={username} />\n          <input type=\"password\" onChange={(e) => {setpassword(e.target.value)}} placeholder=\"Password\" value={password}/>\n          <button className=\"login\" onClick={logIn}>Log In</button>\n          <button className=\"signup\" onClick={signUp}>Sign Up</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}